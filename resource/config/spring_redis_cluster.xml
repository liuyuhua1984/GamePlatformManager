<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:cache="http://www.springframework.org/schema/cache"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
           http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
          http://www.springframework.org/schema/cache 
          http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

	<bean name="genericObjectPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大建立连接等待时间 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="minIdle" value="${redis.minIdle}" />
		<!--最大空闲数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisClusterFactory" class="com.sql.redis.JedisClusterFactory"
		destroy-method="destroy">
		<property name="addressConfig">
			<value>file:${user.dir}/redis_cluster.properties</value>
		</property>
		<property name="addressKeyPrefix" value="address" /> <!-- 属性文件里 key的前缀 -->
		<property name="timeout" value="${redis.timeout}" />
		<property name="maxRedirections" value="${redis.maxRedirections}" />
		<property name="genericObjectPoolConfig" ref="genericObjectPoolConfig" />
		<property name="password" value="${redis.password}" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	
	  <!-- 配置缓存 -->  
   <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
       <constructor-arg ref="redisTemplate" />  
   </bean> 
   
</beans>